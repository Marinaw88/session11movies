{"version":3,"sources":["MovieContainer.js","App.js","reportWebVitals.js","index.js"],"names":["MovieContainer","props","state","title","contents","release_date","poster_path","className","src","this","React","Component","App","movies","loadMovies","axios","get","then","response","setState","data","results","movieIndex","console","log","vote_average","class","direction","scrollamount","behavior","map","movie","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA+BeA,G,wDAzBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACTC,MAAO,EAAKF,MAAMG,SAASD,MAC3BE,aAAc,EAAKJ,MAAMG,SAASC,aAClCC,YAAa,EAAKL,MAAMG,SAASE,aANvB,E,qDAcd,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAJK,kCAIcC,KAAKP,MAAMI,YAAaC,UAAU,WAE9D,qBAAKA,UAAU,YAAf,SACI,+BAAKE,KAAKP,MAAMC,MAAhB,KAAyBM,KAAKP,MAAMG,aAApC,gB,GApBaK,IAAMC,YCiDpBC,E,kDA/Cb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXW,OAAQ,IAJO,E,gEASjBJ,KAAKK,e,mCAGO,IAAD,OAGXC,IAAMC,IADM,8KAETC,MAAK,SAAAC,GAGJ,EAAKC,SAAS,CAACN,OAAQK,EAASE,KAAKC,e,kCAK/BC,GACVC,QAAQC,IAAIf,KAAKP,MAAMW,OAAOS,GAAYG,gB,+BAO1C,OACE,sBAAKlB,UAAU,MAAf,UACE,yBAASmB,MAAM,mBAAuBC,UAAU,OAAOC,aAAa,KAAMC,SAAS,SAAnF,sCACA,qBAAKtB,UAAU,eAAf,SACGE,KAAKP,MAAMW,OAAOiB,KAAI,SAAAC,GAEnB,OAAO,cAAC,EAAD,CAAgB3B,SAAU2B,gB,GAvC7BrB,IAAMC,WCMTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.db5e15e9.chunk.js","sourcesContent":["// Bottom\r\n// And position relative and absolute\r\n// You put absolute on your text and relative on the image\r\nimport React from 'react';\r\n\r\nclass MovieContainer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            title: this.props.contents.title,\r\n            release_date: this.props.contents.release_date,\r\n            poster_path: this.props.contents.poster_path\r\n        }\r\n        //given one of these movies, heres a container ^\r\n    }\r\n\r\n    render(){\r\n        const imageLink = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n        return(\r\n            <div className=\"movieContainer\" >\r\n                <img src = {imageLink + this.state.poster_path} className=\"poster\">\r\n                </img>\r\n            <div className=\"movieInfo\">\r\n                <h2>{this.state.title} ({this.state.release_date})</h2>\r\n            </div>\r\n        </div>\r\n    \r\n        );}\r\n}\r\nexport default MovieContainer;\r\n\r\n\r\n//onMouseOver event","import React from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nimport MovieContainer from './MovieContainer.js';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      movies: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadMovies();\r\n  }\r\n\r\n  loadMovies() {\r\n    // go grab (aka get) all the data from some url\r\n    const url = \"https://api.themoviedb.org/3/discover/movie?api_key=b6fbc7f3f313bd395902af464ef47262&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1\";\r\n    axios.get(url)\r\n      .then(response =>\r\n      {\r\n        // then put just the movies (not everything) into the state\r\n        this.setState({movies: response.data.results});\r\n      });\r\n\r\n  }\r\n\r\n  voteAverage(movieIndex) {\r\n    console.log(this.state.movies[movieIndex].vote_average);\r\n  }\r\n\r\n\r\n  render() {\r\n    const imageLink = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <marquee class=\"GeneratedMarquee\"     direction=\"left\" scrollamount=\"50\"  behavior=\"scroll\">CHECK OUT THESE MOVIES!!</marquee>\r\n        <div className=\"bigContainer\"> \r\n          {this.state.movies.map(movie =>\r\n            {\r\n              return <MovieContainer contents={movie}/>\r\n          \r\n             })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n//DON'T FORGET THE SECOND RETURNNNNNNNNNNNNN","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}